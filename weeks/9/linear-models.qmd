---
title: "linear-models"
author: "geshun"
format: html
editor: visual
---

## Linear Models

A model is a representation of the real world. A company ($KN^3$) engages Facebook ad as a marketing strategy. The company wants to find a way to increase its revenue and control the cost of advertisement. If we can find an association between ad and revenue (i.e. $revenue = f(ad) + \epsilon$) the company might be able to achieve its goals. The whole idea is determining what this $f$ is. Realize that our $f$ is just approximating (since it's a model and not the real thing) so we add the error term \$\\epsilon\$. The form this function $f$ takes defines if we have a linear model.

```{python}
import pandas as pd
import statsmodels.api as sm
from math import sqrt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error
```

```{python}
revenue = [12000, 23000, 15000, 10000, 18000]
ad_cost = [300, 450, 360, 300, 400]
df = pd.DataFrame({"ad_cost": ad_cost, "revenue": revenue})
df.corr()
```

```{python}
reg = LinearRegression()
reg.fit(df[["ad_cost"]], df.revenue)
reg.score(df[["ad_cost"]], df.revenue)
```

```{python}
y_pred = reg.predict(df.drop(['revenue'], axis=1))
r2_score(df.revenue, y_pred)
sqrt(mean_squared_error(df.revenue, y_pred))
mean_absolute_error(df.revenue, y_pred)
```

```{python}
mod = sm.OLS(df[["ad_cost"]], df.revenue)
reg = mod.fit()
reg.summary()
```
